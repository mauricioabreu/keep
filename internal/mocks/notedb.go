// Code generated by MockGen. DO NOT EDIT.
// Source: internal/db/note.go
//
// Generated by this command:
//
//	mockgen -source internal/db/note.go -package mocks
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	uuid "github.com/google/uuid"
	db "github.com/mauricioabreu/keep/internal/db"
	gomock "go.uber.org/mock/gomock"
)

// MockNoteStorer is a mock of NoteStorer interface.
type MockNoteStorer struct {
	ctrl     *gomock.Controller
	recorder *MockNoteStorerMockRecorder
}

// MockNoteStorerMockRecorder is the mock recorder for MockNoteStorer.
type MockNoteStorerMockRecorder struct {
	mock *MockNoteStorer
}

// NewMockNoteStorer creates a new mock instance.
func NewMockNoteStorer(ctrl *gomock.Controller) *MockNoteStorer {
	mock := &MockNoteStorer{ctrl: ctrl}
	mock.recorder = &MockNoteStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNoteStorer) EXPECT() *MockNoteStorerMockRecorder {
	return m.recorder
}

// CreateNote mocks base method.
func (m *MockNoteStorer) CreateNote(arg0 context.Context, arg1 db.CreateNoteParams) (db.Note, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNote", arg0, arg1)
	ret0, _ := ret[0].(db.Note)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNote indicates an expected call of CreateNote.
func (mr *MockNoteStorerMockRecorder) CreateNote(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNote", reflect.TypeOf((*MockNoteStorer)(nil).CreateNote), arg0, arg1)
}

// GetNote mocks base method.
func (m *MockNoteStorer) GetNote(arg0 context.Context, arg1 uuid.UUID) (db.Note, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNote", arg0, arg1)
	ret0, _ := ret[0].(db.Note)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNote indicates an expected call of GetNote.
func (mr *MockNoteStorerMockRecorder) GetNote(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNote", reflect.TypeOf((*MockNoteStorer)(nil).GetNote), arg0, arg1)
}
